pipeline {
    agent any
    
    stages {
        stage(clone) {
            steps {
                git 'https://github.com/ravinaj21/Amazon.git'
            }
        }
        stage(build) {
            steps {
                sh 'mvn -f Amazon/pom.xml clean install -DskipTests'
            }
        }
        stage(test) {
            steps {
                sh 'mvn -f Amazon/pom.xml test'
            }
            post {
				always {
					archiveArtifacts 'Amazon/Amazon-Web/target/*.war'
					
					junit 'Amazon/Amazon-Core/target/surefire-reports/*.xml'
				}
			}
        }
	stage('Update GIT') {
          steps {
           script {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
             withCredentials([usernamePassword(credentialsId: 'ravina', passwordVariable: 'ravina@1914')]) {
              def encodedPassword = URLEncoder.encode("ravina@1914",'UTF-8')
              sh "git add ."
              sh "git commit -m 'Triggered Build: ${env.BUILD_NUMBER}'"
              sh "git push https://ravina:${encodedPassword}@github.com/ravinaj21/trail.git"
             }
           }
         }
        }
       }
        
    }
}   
